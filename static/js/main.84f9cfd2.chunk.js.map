{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","services/imagesServices.js","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","BASE_URL","API_KEY","a","imageName","currentPage","searchQuery","fetch","response","json","data","hits","Searchbar","onSubmit","useState","setimageName","className","s","SearchForm","e","preventDefault","trim","toast","type","SearchFormButton","SearchFormButtonLabel","value","onChange","currentTarget","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","onClose","src","alt","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","onClick","target","ImageGalleryItemImage","ImageGalleryItem","largeImageUrl","showModal","setshowModal","toggleModal","ImageGallery","images","map","id","webformatURL","largeImageURL","tags","Button","Spinner","Spiner","color","height","width","timeout","Component","App","setImageName","setImages","setCurrentPage","isLoading","setIsLoading","error","setError","fetchImagesAPI","then","newImages","scrollPage","catch","finally","fetchImages","scrollTo","top","documentElement","scrollHeight","behavior","message","length","prevState","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84f9cfd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2NrME\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__29T6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3jNtN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1L9ph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spiner\":\"Loader_Spiner__2Qctz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1WiLu\",\"SearchForm\":\"Searchbar_SearchForm__yUrNN\",\"SearchFormButton\":\"Searchbar_SearchFormButton__qm3hw\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1JDoF\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1kZIy\"};","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '18966103-245a37f9e820c36a1856c1db9';\n\nexport default async function fetchImagesAPI({ imageName, currentPage }) {\n  const searchQuery = `?q=${imageName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  try {\n    const response = await fetch(`${BASE_URL}/${searchQuery}`);\n    const data = await response.json();\n    return data.hits;\n  } catch (error) {\n    return error('Some error in fetch');\n  }\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [imageName, setimageName] = useState('');\n\n  const handleChange = e => {\n    setimageName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast('Please enter search query');\n      return;\n    }\n\n    onSubmit(imageName);\n\n    setimageName('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          value={imageName}\n          onChange={handleChange}\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClose, src, alt }) {\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      window.addEventListener('keydown', handleKeyDown);\n      isFirstRender.current = false;\n      return;\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={src} alt={alt} className={s.ImageGalleryItemImage} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nimport Modal from '../Modal';\n\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\n  const [showModal, setshowModal] = useState(false);\n\n  const toggleModal = () => {\n    setshowModal(!showModal);\n  };\n\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        onClick={toggleModal}\n        src={src}\n        alt={alt}\n        className={s.ImageGalleryItemImage}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          src={webformatURL}\n          largeImageUrl={largeImageURL}\n          alt={tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button onClick={onClick} className={s.Button}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  fetchImages: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        className={s.Spiner}\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    );\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport fetchImagesAPI from './services/imagesServices';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchImages();\n  }, [imageName, currentPage]);\n\n  function onChangeQuery(imageName) {\n    setImageName(imageName);\n    setCurrentPage(1);\n    setImages([]);\n    setError(null);\n  }\n\n  function fetchImages() {\n    if (imageName === '') {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchImagesAPI({ imageName, currentPage })\n      .then(newImages => {\n        setImages(images => [...images, ...newImages]);\n        scrollPage();\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  }\n\n  const onLoadMoreBtnClick = () => {\n    setCurrentPage(prevState => prevState + 1);\n    scrollPage();\n  };\n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery images={images} />\n      {isLoading && <Loader />}\n\n      {!isLoading && images.length >= 12 && !error && (\n        <Button onClick={onLoadMoreBtnClick} />\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     imageName: '',\n//     images: [],\n//     currentPage: 1,\n//     isLoading: false,\n//     error: null,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.imageName !== this.state.imageName) {\n//       this.fetchImages();\n//     }\n//   }\n\n//   onChangeQuery = imageName => {\n//     this.setState({\n//       imageName,\n//       currentPage: 1,\n//       images: [],\n//       error: null,\n//     });\n//   };\n\n//   fetchImages = () => {\n//     const { imageName, currentPage } = this.state;\n//     const options = { imageName, currentPage };\n\n//     this.setState({ isLoading: true });\n\n//     fetchImagesAPI(options)\n//       .then(images => {\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...images],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   render() {\n//     const { images, isLoading, error } = this.state;\n//     const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n//     return (\n//       <>\n//         {error && <p>Whoops, something went wrong: {error.message}</p>}\n\n//         <Searchbar onSubmit={this.onChangeQuery} />\n\n//         <ImageGallery images={this.state.images} />\n\n//         {isLoading && <Loader />}\n\n//         {shouldRenderLoadMoreButton && (\n//           <Button fetchImages={this.fetchImages} />\n//         )}\n\n//         <ToastContainer autoClose={3000} />\n//       </>\n//     );\n//   }\n// }\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1XkEG\",\"Modal\":\"Modal_Modal__20f1_\",\"ImageGalleryItemImage\":\"Modal_ImageGalleryItemImage__QT1a0\"};"],"sourceRoot":""}